!/ ------------------------------------------------------------------- /
      MODULE W3FLX5MD
!/
!/                  +-----------------------------------+
!/                  | WAVEWATCH III           NOAA/NCEP |
!/                  |           H. L. Tolman            |
!/                  |                        FORTRAN 90 |
!/                  | Last update :         29-May-2009 |
!/                  +-----------------------------------+
!/
!/    01-Jul-2006 : Origination.                        ( version 3.09 )
!/    29-May-2009 : Preparing distribution version.     ( version 3.14 )
!/
!/    Copyright 2009 National Weather Service (NWS),
!/       National Oceanic and Atmospheric Administration.  All rights
!/       reserved.  WAVEWATCH III is a trademark of the NWS. 
!/       No unauthorized use without permission.
!/
!  1. Purpose :
!
!     Calculates the stress according an algorithm built to match
!        Moon et al. (2004).
!
!  2. Variables and types :
!
!      Name      Type  Scope    Description
!     ----------------------------------------------------------------
!     ----------------------------------------------------------------
!
!  3. Subroutines and functions :
!
!      Name      Type  Scope    Description
!     ----------------------------------------------------------------
!      W3FLX5    Subr. Public   User supplied linear input.
!      INFLX5    Subr. Public   Corresponding initialization routine.
!     ----------------------------------------------------------------
!
!  4. Subroutines and functions used :
!
!      Name      Type  Module   Description
!     ----------------------------------------------------------------
!      STRACE    Subr. W3SERVMD Subroutine tracing.
!     ----------------------------------------------------------------
!
!  5. Remarks :
!
!     WAVEWATCH III is designed as a highly plug-compatible code.
!     Flux modules can be included as self-contained modules,
!     with limited changes needed to the interface of routine calls
!     in W3SRCE, and in the point postprocessing programs only.
!     Codes submitted for inclusion in WAVEWATCH III should be
!     self-contained in the way described below, and might be
!     provided with distributions fully integrated in the data
!     structure, or as an optional version of this module to be
!     included by the user.
!
!     Rules for preparing a module to be included in or distributed
!     with WAVEWATCH III :
!
!      - Fully document the code following the outline given in this
!        file, and according to all other WAVEWATCH III routines.
!      - Provide a file with necessary modifications to W3SRCE and
!        all other routines that require modification.
!      - Provide a test case with expected results.
!      - It is strongly recommended that the programming style used
!        in WAVEWATCH III is followed, in particular 
!          a) for readability, write as if in fixed FORTRAN format 
!             regarding column use, even though all files are F90
!             free format.
!          b) I prefer upper case programming for permanent code,
!             as I use lower case in debugging and temporary code.
!
!     This module needs to be self-contained in the following way.
!
!      a) All saved variables connected with this source term need
!         to be declared in the module header. Upon acceptance as
!         permanent code, they will be converted to the WAVEWATCH III
!         dynamic data structure.  
!      b) Provide a separate computation and initialization routine.
!         In the submission, the initialization should be called
!         from the computation routine upon the first call to the
!         routine. Upon acceptance as permanent code, the
!         initialization routine will be moved to a more appropriate
!         location in the code (i.e., being absorbed in ww3_grid or
!         being moved to W3IOGR). 
!
!     See notes in the file below where to add these elements.
!
!  6. Switches :
!
!     !/S  Enable subroutine tracing.
!
!  7. Source code :
!/
!/ ------------------------------------------------------------------- /
!/
!     *****************************************
!     ***    Declare saved variables here   ***
!     ***  public or private as appropriate ***
!     *****************************************
!
      PUBLIC
!/
      CONTAINS
!/ ------------------------------------------------------------------- /
      SUBROUTINE W3FLX5 ( ZWND, FPI, U10, U10D, UST, USTD, COEF, Z0, CD)
!/
!/                  +-----------------------------------+
!/                  | WAVEWATCH III           NOAA/NCEP |
!/                  |           H. L. Tolman            |
!/                  |                        FORTRAN 90 |
!/                  | Last update :         01-Jul-2006 |
!/                  +-----------------------------------+
!/
!/    01-Jul-2006 : Origination.                        ( version 3.09 )
!/
!  1. Purpose :
!
!     Dummy slot for bottom friction source term.
!
!  2. Method :
!
!  3. Parameters :
!
!     Parameter list
!     ----------------------------------------------------------------
!       ZWND    Real   I   Wind height.
!       FPI     Real   I   Peak Input Frequency.
!       U10     Real   I   Wind speed.
!       U10D    Real   I   Wind direction.
!       UST     Real   O   Friction velocity.
!       USTD    Real   0   Direction of friction velocity.
!       Z0      Real   O   z0 in profile law.
!       CD      Real   O   Drag coefficient.
!       COEF    Real   I   Stability coefficient.
!     ----------------------------------------------------------------
!
!  4. Subroutines used :
!
!      Name      Type  Module   Description
!     ----------------------------------------------------------------
!      STRACE    Subr. W3SERVMD Subroutine tracing.
!     ----------------------------------------------------------------
!
!  5. Called by :
!
!      Name      Type  Module   Description
!     ----------------------------------------------------------------
!      W3SRCE    Subr. W3SRCEMD Source term integration.
!      W3EXPO    Subr.   N/A    Point output post-processor.
!      GXEXPO    Subr.   N/A    GrADS point output post-processor.
!     ----------------------------------------------------------------
!
!  6. Error messages :
!
!       None.
!
!  7. Remarks :
!
!  8. Structure :
!
!     See source code.
!
!  9. Switches :
!
!     !/S  Enable subroutine tracing.
!
! 10. Source code :
!
!/ ------------------------------------------------------------------- /
      USE CONSTANTS
      USE W3ODATMD, ONLY: NDSE
      USE W3SERVMD, ONLY: EXTCDE
!/S      USE W3SERVMD, ONLY: STRACE
!/
      IMPLICIT NONE
!/
!/ ------------------------------------------------------------------- /
!/ Parameter list
!/
      REAL, INTENT(IN)        :: ZWND, FPI, U10, U10D, COEF
      REAL, INTENT(OUT)       :: UST, USTD, Z0, CD
!/
!/ ------------------------------------------------------------------- /
!/ Local parameters
!/
      REAL                    :: U10A, Z0FTN, CDFTN, H1, H2, H3, H4, &
                                 USTAFTN, ZCHFTN, CPEAK, ZCH, X, &
                                 WAGE, AA, BB, A1, A2, A3, A4, &
                                 B1, B2, B3, B4, FX, WND
      INTEGER                 :: I
!/S      INTEGER, SAVE           :: IENT = 0
      LOGICAL, SAVE           :: FIRST = .TRUE.
!/
!/ ------------------------------------------------------------------- /
!/
!/S      CALL STRACE (IENT, 'W3FLX5')
!
! 0.  Initializations ------------------------------------------------ *
!
!     **********************************************************
!     ***    The initialization routine should include all   ***
!     *** initialization, including reading data from files. ***
!     **********************************************************
!
      IF ( FIRST ) THEN
          CALL INFLX5
          FIRST  = .FALSE.
        END IF
!
! 1.   ----------------------------------------------------------- *
!
      U10A=U10*COEF
      U10A=MAX(U10A,0.001)
      USTD=U10D
      IF(U10A .LE. 12.5) THEN
        Z0FTN=0.0185/9.8*(0.001*U10A**2+0.028*U10A)**2
        CDFTN=0.4*0.4*(log(ZWND/Z0FTN)**(-2))
      ELSE
        H1=0.00000000358
        H2=-0.000000988 
        H3=0.0000781
        H4=0.00079107
        CDFTN=H1*U10A**3+H2*U10A**2+H3*U10A+H4
        Z0FTN=ZWND*EXP(-0.4/SQRT(CDFTN))
      ENDIF                                

      USTAFTN=SQRT(CDFTN)*U10A
      ZCHFTN=Z0FTN*GRAV/(USTAFTN**2)

!------ phase velocity at peak
      CPEAK=GRAV/(FPI)

 
      IF (U10A .LE. 0.) THEN
        Z0 =  0.000001
        ZCH=  0.000001
        CD=   0.000001       
        UST=  0.000001
      
      ELSEIF((U10A.GT.0.).and.(U10A.LE. 12.5)) THEN
         Z0=Z0FTN
         CD=CDFTN
         UST=SQRT(CD)*U10A
         ZCH=Z0*GRAV/UST**2
      
      ELSE

!----- Initial value of usta using function
         X=SQRT(CDFTN)*U10A             

!----- Iteration to get usta
         DO I=1,5

           WAGE=CPEAK/X

!----- Calculation of Charnock Coefficient(Zch-Wage relationship)
!--------conform with Il-ju (2004)

           IF (U10A .LE. 10.) THEN
             AA=0.8061733
             BB=-1.301822
!------para for high drag------------------------------
           ELSEIF( (U10A .GT. 10.).AND.(U10A .LE. 17.6035) ) THEN
             A1=-0.9366866
             A2=10.03675
             A3=-38.1026744
             A4=45.7405
             WND=LOG(U10A)
             AA=EXP(A1*WND**3+A2*WND**2+A3*WND+A4)
             B1=0.0007508
             B2=-0.0420687
             B3=0.83647731
             B4=-6.2105114
             BB=B1*U10A**3+B2*U10A**2+B3*U10A+B4
           ELSE
             AA=100.09*U10A**(-2.6794)  
             BB=0.849*LOG(U10A)-2.8614
           ENDIF

           AA=AA*(1+0.008*U10A)
           ZCH=AA*WAGE**BB

           FX=X/0.4*LOG(10.*GRAV/(X**2*ZCH))-U10A

           IF( (ABS(FX).GE. 0.001) .AND. (i .LT. 5.) ) THEN
             X=X-(X/0.4*LOG(10*GRAV/(X**2*ZCH))-U10A)/                &
                   ((1/0.4)*(LOG(10*GRAV/(X**2*ZCH))-2.))
           ELSE
             UST=X
           ENDIF

         ENDDO

         UST=X

!------- roughness length and Drag coefficient
        Z0=UST**2*ZCH/GRAV
        CD=(1/0.4*LOG(10/Z0))**(-2)
      ENDIF
      UST=UST/COEF
!
!
      RETURN
!
! Formats
!

!/
!/ End of W3FLX5 ----------------------------------------------------- /
!/
      END SUBROUTINE W3FLX5
!/ ------------------------------------------------------------------- /
      SUBROUTINE INFLX5
!/
!/                  +-----------------------------------+
!/                  | WAVEWATCH III           NOAA/NCEP |
!/                  |           H. L. Tolman            |
!/                  |                        FORTRAN 90 |
!/                  | Last update :         01-Jul-2006 |
!/                  +-----------------------------------+
!/
!/    01-Jul-2006 : Origination.                        ( version 3.09 )
!/
!  1. Purpose :
!
!     Initialization for source term routine.
!
!  2. Method :
!
!  3. Parameters :
!
!     Parameter list
!     ----------------------------------------------------------------
!     ----------------------------------------------------------------
!
!  4. Subroutines used :
!
!      Name      Type  Module   Description
!     ----------------------------------------------------------------
!      STRACE    Subr. W3SERVMD Subroutine tracing.
!     ----------------------------------------------------------------
!
!  5. Called by :
!
!      Name      Type  Module   Description
!     ----------------------------------------------------------------
!      W3FLXX    Subr. W3FLXXMD Corresponding source term.
!     ----------------------------------------------------------------
!
!  6. Error messages :
!
!       None.
!
!  7. Remarks :
!
!  8. Structure :
!
!     See source code.
!
!  9. Switches :
!
!     !/S  Enable subroutine tracing.
!
! 10. Source code :
!
!/ ------------------------------------------------------------------- /
      USE W3ODATMD, ONLY: NDSE
      USE W3SERVMD, ONLY: EXTCDE
!/S      USE W3SERVMD, ONLY: STRACE
!/
      IMPLICIT NONE
!/
!/ ------------------------------------------------------------------- /
!/ Parameter list
!/
!/
!/ ------------------------------------------------------------------- /
!/ Local parameters
!/
!/S      INTEGER, SAVE           :: IENT = 0
!/
!/ ------------------------------------------------------------------- /
!/
!/S      CALL STRACE (IENT, 'INFLX5')
!
! 1.  .... ----------------------------------------------------------- *
!
!
!
      RETURN
!
! Formats
!

!/
!/ End of INFLX5 ----------------------------------------------------- /
!/
      END SUBROUTINE INFLX5
!/
!/ End of module INFLX5MD -------------------------------------------- /
!/
      END MODULE W3FLX5MD
